---
title:  "Automated Malware Analysis"
date:   2017-01-07 15:04:23
categories: [lab]
tags: [analysis, malware, rem, vm]
---
In this post I'm going to share a few techniques I use to automate <i>some</i> of the required analysis of suspecious software.

At a high-level my malware lab consist of the following software/libraries running on OSX:

#Volatility
#Homebrew
#DiStorm3
#Yara
#pycrypto
#pil
#openpyxl
#Cuckoo
#Xcode
#subversion
#Virtualbox

Install Required Software and Dependencies
•brew install libtool
•distorm3
•Download the latest version
•https://code.google.com/p/distorm/
•# unzip distorm3-1.0.zip
•# cd distorm3-1.0
•# python setup.py build
•# python setup.py build install
•yara
•Download the latest version
•http://plusvic.github.io/yara/
•# ./bootstrap.sh
•# ./configure —enable-cuckoo
•pycrypto
•pil
•openpyxl
•Cuckoo
•Install Required Software on the Host Machine
•Xcode from the App Store
•Xcode command-line tools
•Homebrew (brew)
•ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)”
•brew install wget
•**brew install ocaml**
•subversion
•Virtualbox

•Windows guest machine
•Pil python library
•Office apps
•Reader
•Flash
•Winzip
•Guest virtualization tools
•*disable firewall
•*disable iac
•*disable updates
•Python and Dependencies
•python - installed by os
•python-magic - $ easy_install python-magic
•python-dpkt - googlecode - download (dmg)
•python-sqlalchemy - $ easy_install sqlalchemy
•python-mako - $ easy_install mako
•python-jinja - $ easy_install Jinja2
•python-bottle - $ easy_install Bottle
•SSDeep for calculating hashes
•ssdeep - download (source)
•python-pyrex - $ easy_install pyrex
•pyssdeep - $svn checkout http://pyssdeep.googlecode.com/svn/trunk/ pyssdeep
•MondoDB and Python Support
•python-pymongo - $ easy_install pymongo
•mongodb - $ curl http://downloads.mongodb.org/osx/mongodb-osx-x86_64-2.4.5.tgz > mongodb.tgz
•(http://docs.mongodb.org/manual/tutorial/install-mongodb-on-os-x/)
•pcregrep $ brew install pcre
•yara $ brew install yara
•yara-python
•libpcap $ brew install libpcap
•change permissions for cuckoo
•change permissions of tcpdump
•first create backup cp tcpdump tcpdump.org
•sudo chmod +s /usr/sbin/tcpdump
•Prepare the vm
•christophers-imac:cuckoo ashby$ VBoxManage snapshot Win7-Cuckoo take Malware-Analysis --pause
•christophers-imac:cuckoo ashby$ VBoxManage controlvm Win7-Cuckoo poweroff
•christophers-imac:cuckoo ashby$ VBoxManage snapshot Win7-Cuckoo restorecurrent
Notes
enable cuckoo on macbook
 
tcpdump workaround
sudo chmod +s /usr/sbin/tcpdump
 
VBoxManage snapshot "<Name of VM>" take "<Name of snapshot>" --pause
 
$ VBoxManage controlvm "<Name of VM>" poweroff
$ VBoxManage snapshot "<Name of VM>" restorecurrent
 
disable firewall - mac
sudo sysctl -w net.inet.ip.forwarding=1
sudo natd -interface en0
sudo ipfw add divert natd ip from any to any via en0
 
Enable the application firewall via
 
defaults write /Library/Preferences/com.apple.alf globalstate -int 1
(0 to disable), and restart the services
 
launchctl unload /System/Library/LaunchAgents/com.apple.alf.useragent.plist
launchctl unload /System/Library/LaunchDaemons/com.apple.alf.agent.plist
 
launchctl load /System/Library/LaunchDaemons/com.apple.alf.agent.plist
launchctl load /System/Library/LaunchAgents/com.apple.alf.useragent.plist
 
The application firewall can be controlled with the /usr/libexec/ApplicationFirewall/socketfilterfw binary.
